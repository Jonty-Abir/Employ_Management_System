import Form from "@/Components/Form";
import Table from "@/Components/Table";
import Head from "next/head";
import { toast, Toaster } from "react-hot-toast";
import { AiOutlineUsergroupAdd } from "react-icons/ai";
import { BiCheck, BiX } from "react-icons/bi";
import { useMutation, useQueryClient } from "react-query";
import { useDispatch, useSelector } from "react-redux";
import { deleteUser, getAllUser } from "../library/helper";
import { deleteAction, toggleChangeAction } from "../Redux/Reducer/reducer";

export default function Home() {
  const disPatch = useDispatch();
  const visible = useSelector((state) => state.app.client.formToggle);
  const deleteId = useSelector((state) => state.app.client.deleteId);
  /***_______  create our clientQuery & mutation for deleting user   ________**/

  const queryClient = useQueryClient();
  const deleteMutation = useMutation((id) => deleteUser(id), {
    onSuccess: async () => {
      await queryClient.prefetchQuery("allUsers", getAllUser);
    },
    onError: async () => {
      toast.error("Count not delete!");
    },
  });

  /***_______   Toggler handler  ________**/

  const handle = async () => {
    disPatch(toggleChangeAction());
  };
  /***_______   Delete Handler  ________**/

  const deleteHandler = async () => {
    if (deleteId) {
      await deleteMutation.mutate(deleteId);
      disPatch(deleteAction(null));
    } else {
      toast.error("Error code 404 !");
    }
  };
  /***_______   Cancle Handler  ________**/

  const cancelDeleteHandler = () => {
    disPatch(deleteAction(null));
  };
  return (
    <>
      <Head>
        <title>Empoly Managements</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="py-5">
        <Toaster />
        <h1 className="text-xl md:text-4xl text-center font-bold py-10 ">
          Employ Management Sysytem
        </h1>

        <div className="container flex justify-between  mx-auto py-5 border-b">
          <div className="left flex gap-3">
            <button
              onClick={handle}
              className="bg-indigo-500 py-2 px-4 flex gap-2 text-gray-50 border rounded-md hover:bg-gray-500 items-center"
            >
              Add Employee{" "}
              <span>
                <AiOutlineUsergroupAdd />
              </span>
            </button>
          </div>
        </div>
        {/*  */}
        {visible ? (
          <div className="flex justify-center">
            <Form />
          </div>
        ) : (
          ""
        )}
        {/*  */}
        {!visible && deleteId ? (
          <DelteUser
            deleteHandler={deleteHandler}
            cancaleHandler={cancelDeleteHandler}
          />
        ) : (
          ""
        )}
        <div className="container w-full flex mx-auto justify-center mt-4">
          <Table />
        </div>
      </main>
    </>
  );
}

const DelteUser = ({ deleteHandler, cancaleHandler }) => {
  return (
    <>
      <div className=" flex gap-x-4 justify-end mr-20">
        <p className="font-semibold">Are you sure?</p>
        <button
          onClick={deleteHandler}
          className="px-4 py-3 flex rounded-md text-gray-100 bg-rose-600 hover:border-gray-800 hover:ring-2 ring-rose-400"
        >
          Yes{" "}
          <span className="pl-1">
            {" "}
            <BiX color="rgba(225 225 225)" size={25} />
          </span>
        </button>
        <button
          onClick={cancaleHandler}
          className="px-4 py-3 flex rounded-md text-gray-100 bg-green-500 hover:border-gray-800 hover:ring-2 ring-green-400"
        >
          No{" "}
          <span className="pl-1">
            <BiCheck color="rgba(225 225 225)" size={25} />
          </span>
        </button>
      </div>
    </>
  );
};
